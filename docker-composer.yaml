version: '3.7'

volumes:
  postgre_kong_data: {}

networks:
  ifg-net:
    driver: bridge

services:

  # IFG
  # postgressl db
  postgres-db:
    image: postgres:9.5
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - ifg-net
    volumes:
      - postgre_kong_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  # kong gateway
  kong:
    container_name: kong
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    user: "kong"
    depends_on:
      - postgres-db
      - kong-migrations-up
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: postgres-db
      KONG_PG_USER: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PG_PASSWORD: kong
    # mount log data to local files 
    volumes:
      - ./logs/gateway.log:/tmp/file.log
    networks:
      - ifg-net
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "127.0.0.1:8444:8444"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  # kong postgres migration schema
  kong-migrations-up:
      image: "${KONG_DOCKER_TAG:-kong:latest}"
      command: kong migrations bootstrap && kong migrations finish
      depends_on:
        - postgres-db
      environment:
        KONG_DATABASE: postgres
        KONG_PG_DATABASE: kong
        KONG_PG_HOST: postgres-db
        KONG_PG_USER: kong
        KONG_PG_PASSWORD: kong
      networks:
        - ifg-net
      restart: on-failure
      deploy:
        restart_policy:
          condition: on-failure
    
  # konga prepare
  konga-prepare:
      image: pantsel/konga
      command: "-c prepare -a postgres -u postgresql://kong:kong@postgres-db:5432/konga"
      networks:
        - ifg-net
      restart: on-failure
      depends_on:
        - postgres-db
        - kong
    
  # konga
  # connect to konga using kong container name or your machine local ip
  konga:
      image: pantsel/konga
      restart: always
      networks:
          - ifg-net
      environment:
        DB_ADAPTER: postgres
        TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
        DB_URI: postgresql://kong:kong@postgres-db:5432/konga
        NODE_ENV: production
      depends_on:
        - postgres-db
        - konga-prepare
      ports:
        - "1337:1337"